# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class SessInactTimerForUeComm(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, n4_sess_id=None, sess_inactive_timer=None):  # noqa: E501
        """SessInactTimerForUeComm - a model defined in OpenAPI

        :param n4_sess_id: The n4_sess_id of this SessInactTimerForUeComm.  # noqa: E501
        :type n4_sess_id: int
        :param sess_inactive_timer: The sess_inactive_timer of this SessInactTimerForUeComm.  # noqa: E501
        :type sess_inactive_timer: int
        """
        self.openapi_types = {
            'n4_sess_id': int,
            'sess_inactive_timer': int
        }

        self.attribute_map = {
            'n4_sess_id': 'n4SessId',
            'sess_inactive_timer': 'sessInactiveTimer'
        }

        self.n4_sess_id = n4_sess_id
        self.sess_inactive_timer = sess_inactive_timer

    @classmethod
    def from_dict(cls, dikt) -> 'SessInactTimerForUeComm':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SessInactTimerForUeComm of this SessInactTimerForUeComm.  # noqa: E501
        :rtype: SessInactTimerForUeComm
        """
        return util.deserialize_model(dikt, cls)

    @property
    def n4_sess_id(self):
        """Gets the n4_sess_id of this SessInactTimerForUeComm.

        Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.    # noqa: E501

        :return: The n4_sess_id of this SessInactTimerForUeComm.
        :rtype: int
        """
        return self._n4_sess_id

    @n4_sess_id.setter
    def n4_sess_id(self, n4_sess_id):
        """Sets the n4_sess_id of this SessInactTimerForUeComm.

        Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.    # noqa: E501

        :param n4_sess_id: The n4_sess_id of this SessInactTimerForUeComm.
        :type n4_sess_id: int
        """
        if n4_sess_id is not None and n4_sess_id > 255:  # noqa: E501
            raise ValueError("Invalid value for `n4_sess_id`, must be a value less than or equal to `255`")  # noqa: E501
        if n4_sess_id is not None and n4_sess_id < 0:  # noqa: E501
            raise ValueError("Invalid value for `n4_sess_id`, must be a value greater than or equal to `0`")  # noqa: E501

        self._n4_sess_id = n4_sess_id

    @property
    def sess_inactive_timer(self):
        """Gets the sess_inactive_timer of this SessInactTimerForUeComm.

        indicating a time in seconds.  # noqa: E501

        :return: The sess_inactive_timer of this SessInactTimerForUeComm.
        :rtype: int
        """
        return self._sess_inactive_timer

    @sess_inactive_timer.setter
    def sess_inactive_timer(self, sess_inactive_timer):
        """Sets the sess_inactive_timer of this SessInactTimerForUeComm.

        indicating a time in seconds.  # noqa: E501

        :param sess_inactive_timer: The sess_inactive_timer of this SessInactTimerForUeComm.
        :type sess_inactive_timer: int
        """
        if sess_inactive_timer is None:
            raise ValueError("Invalid value for `sess_inactive_timer`, must not be `None`")  # noqa: E501

        self._sess_inactive_timer = sess_inactive_timer
