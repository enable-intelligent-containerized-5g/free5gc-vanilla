# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.matching_direction import MatchingDirection
from openapi_server.models.red_trans_exp_ordering_criterion import RedTransExpOrderingCriterion
from openapi_server import util

from openapi_server.models.matching_direction import MatchingDirection  # noqa: E501
from openapi_server.models.red_trans_exp_ordering_criterion import RedTransExpOrderingCriterion  # noqa: E501

class RedundantTransmissionExpReq(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, red_t_order_criter=None, order=None):  # noqa: E501
        """RedundantTransmissionExpReq - a model defined in OpenAPI

        :param red_t_order_criter: The red_t_order_criter of this RedundantTransmissionExpReq.  # noqa: E501
        :type red_t_order_criter: RedTransExpOrderingCriterion
        :param order: The order of this RedundantTransmissionExpReq.  # noqa: E501
        :type order: MatchingDirection
        """
        self.openapi_types = {
            'red_t_order_criter': RedTransExpOrderingCriterion,
            'order': MatchingDirection
        }

        self.attribute_map = {
            'red_t_order_criter': 'redTOrderCriter',
            'order': 'order'
        }

        self.red_t_order_criter = red_t_order_criter
        self.order = order

    @classmethod
    def from_dict(cls, dikt) -> 'RedundantTransmissionExpReq':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RedundantTransmissionExpReq of this RedundantTransmissionExpReq.  # noqa: E501
        :rtype: RedundantTransmissionExpReq
        """
        return util.deserialize_model(dikt, cls)

    @property
    def red_t_order_criter(self):
        """Gets the red_t_order_criter of this RedundantTransmissionExpReq.


        :return: The red_t_order_criter of this RedundantTransmissionExpReq.
        :rtype: RedTransExpOrderingCriterion
        """
        return self._red_t_order_criter

    @red_t_order_criter.setter
    def red_t_order_criter(self, red_t_order_criter):
        """Sets the red_t_order_criter of this RedundantTransmissionExpReq.


        :param red_t_order_criter: The red_t_order_criter of this RedundantTransmissionExpReq.
        :type red_t_order_criter: RedTransExpOrderingCriterion
        """

        self._red_t_order_criter = red_t_order_criter

    @property
    def order(self):
        """Gets the order of this RedundantTransmissionExpReq.


        :return: The order of this RedundantTransmissionExpReq.
        :rtype: MatchingDirection
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this RedundantTransmissionExpReq.


        :param order: The order of this RedundantTransmissionExpReq.
        :type order: MatchingDirection
        """

        self._order = order
