# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class TargetUeIdentification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, supis=None, inter_group_ids=None, any_ue_id=None):  # noqa: E501
        """TargetUeIdentification - a model defined in OpenAPI

        :param supis: The supis of this TargetUeIdentification.  # noqa: E501
        :type supis: List[str]
        :param inter_group_ids: The inter_group_ids of this TargetUeIdentification.  # noqa: E501
        :type inter_group_ids: List[str]
        :param any_ue_id: The any_ue_id of this TargetUeIdentification.  # noqa: E501
        :type any_ue_id: bool
        """
        self.openapi_types = {
            'supis': List[str],
            'inter_group_ids': List[str],
            'any_ue_id': bool
        }

        self.attribute_map = {
            'supis': 'supis',
            'inter_group_ids': 'interGroupIds',
            'any_ue_id': 'anyUeId'
        }

        self.supis = supis
        self.inter_group_ids = inter_group_ids
        self.any_ue_id = any_ue_id

    @classmethod
    def from_dict(cls, dikt) -> 'TargetUeIdentification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TargetUeIdentification of this TargetUeIdentification.  # noqa: E501
        :rtype: TargetUeIdentification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def supis(self):
        """Gets the supis of this TargetUeIdentification.


        :return: The supis of this TargetUeIdentification.
        :rtype: List[str]
        """
        return self._supis

    @supis.setter
    def supis(self, supis):
        """Sets the supis of this TargetUeIdentification.


        :param supis: The supis of this TargetUeIdentification.
        :type supis: List[str]
        """
        if supis is not None and len(supis) < 1:
            raise ValueError("Invalid value for `supis`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._supis = supis

    @property
    def inter_group_ids(self):
        """Gets the inter_group_ids of this TargetUeIdentification.


        :return: The inter_group_ids of this TargetUeIdentification.
        :rtype: List[str]
        """
        return self._inter_group_ids

    @inter_group_ids.setter
    def inter_group_ids(self, inter_group_ids):
        """Sets the inter_group_ids of this TargetUeIdentification.


        :param inter_group_ids: The inter_group_ids of this TargetUeIdentification.
        :type inter_group_ids: List[str]
        """
        if inter_group_ids is not None and len(inter_group_ids) < 1:
            raise ValueError("Invalid value for `inter_group_ids`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._inter_group_ids = inter_group_ids

    @property
    def any_ue_id(self):
        """Gets the any_ue_id of this TargetUeIdentification.


        :return: The any_ue_id of this TargetUeIdentification.
        :rtype: bool
        """
        return self._any_ue_id

    @any_ue_id.setter
    def any_ue_id(self, any_ue_id):
        """Sets the any_ue_id of this TargetUeIdentification.


        :param any_ue_id: The any_ue_id of this TargetUeIdentification.
        :type any_ue_id: bool
        """

        self._any_ue_id = any_ue_id
