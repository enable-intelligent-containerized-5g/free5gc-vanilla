# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class HfcNodeId(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hfc_nid=None):  # noqa: E501
        """HfcNodeId - a model defined in OpenAPI

        :param hfc_nid: The hfc_nid of this HfcNodeId.  # noqa: E501
        :type hfc_nid: str
        """
        self.openapi_types = {
            'hfc_nid': str
        }

        self.attribute_map = {
            'hfc_nid': 'hfcNId'
        }

        self.hfc_nid = hfc_nid

    @classmethod
    def from_dict(cls, dikt) -> 'HfcNodeId':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The HfcNodeId of this HfcNodeId.  # noqa: E501
        :rtype: HfcNodeId
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hfc_nid(self):
        """Gets the hfc_nid of this HfcNodeId.

        This IE represents the identifier of the HFC node Id as specified in CableLabs WR-TR-5WWC-ARCH. It is provisioned by the wireline operator as part of wireline operations and may contain up to six characters.   # noqa: E501

        :return: The hfc_nid of this HfcNodeId.
        :rtype: str
        """
        return self._hfc_nid

    @hfc_nid.setter
    def hfc_nid(self, hfc_nid):
        """Sets the hfc_nid of this HfcNodeId.

        This IE represents the identifier of the HFC node Id as specified in CableLabs WR-TR-5WWC-ARCH. It is provisioned by the wireline operator as part of wireline operations and may contain up to six characters.   # noqa: E501

        :param hfc_nid: The hfc_nid of this HfcNodeId.
        :type hfc_nid: str
        """
        if hfc_nid is None:
            raise ValueError("Invalid value for `hfc_nid`, must not be `None`")  # noqa: E501
        if hfc_nid is not None and len(hfc_nid) > 6:
            raise ValueError("Invalid value for `hfc_nid`, length must be less than or equal to `6`")  # noqa: E501

        self._hfc_nid = hfc_nid
