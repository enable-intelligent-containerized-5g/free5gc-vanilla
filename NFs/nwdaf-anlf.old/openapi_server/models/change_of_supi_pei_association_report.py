# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
import re
from openapi_server import util

import re  # noqa: E501

class ChangeOfSupiPeiAssociationReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, new_pei=None):  # noqa: E501
        """ChangeOfSupiPeiAssociationReport - a model defined in OpenAPI

        :param new_pei: The new_pei of this ChangeOfSupiPeiAssociationReport.  # noqa: E501
        :type new_pei: str
        """
        self.openapi_types = {
            'new_pei': str
        }

        self.attribute_map = {
            'new_pei': 'newPei'
        }

        self.new_pei = new_pei

    @classmethod
    def from_dict(cls, dikt) -> 'ChangeOfSupiPeiAssociationReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChangeOfSupiPeiAssociationReport of this ChangeOfSupiPeiAssociationReport.  # noqa: E501
        :rtype: ChangeOfSupiPeiAssociationReport
        """
        return util.deserialize_model(dikt, cls)

    @property
    def new_pei(self):
        """Gets the new_pei of this ChangeOfSupiPeiAssociationReport.

        String representing a Permanent Equipment Identifier that may contain - an IMEI or IMEISV, as  specified in clause 6.2 of 3GPP TS 23.003; a MAC address for a 5G-RG or FN-RG via  wireline  access, with an indication that this address cannot be trusted for regulatory purpose if this  address cannot be used as an Equipment Identifier of the FN-RG, as specified in clause 4.7.7  of 3GPP TS23.316. Examples are imei-012345678901234 or imeisv-0123456789012345.    # noqa: E501

        :return: The new_pei of this ChangeOfSupiPeiAssociationReport.
        :rtype: str
        """
        return self._new_pei

    @new_pei.setter
    def new_pei(self, new_pei):
        """Sets the new_pei of this ChangeOfSupiPeiAssociationReport.

        String representing a Permanent Equipment Identifier that may contain - an IMEI or IMEISV, as  specified in clause 6.2 of 3GPP TS 23.003; a MAC address for a 5G-RG or FN-RG via  wireline  access, with an indication that this address cannot be trusted for regulatory purpose if this  address cannot be used as an Equipment Identifier of the FN-RG, as specified in clause 4.7.7  of 3GPP TS23.316. Examples are imei-012345678901234 or imeisv-0123456789012345.    # noqa: E501

        :param new_pei: The new_pei of this ChangeOfSupiPeiAssociationReport.
        :type new_pei: str
        """
        if new_pei is None:
            raise ValueError("Invalid value for `new_pei`, must not be `None`")  # noqa: E501
        if new_pei is not None and not re.search(r'^(imei-[0-9]{15}|imeisv-[0-9]{16}|mac((-[0-9a-fA-F]{2}){6})(-untrusted)?|eui((-[0-9a-fA-F]{2}){8})|.+)$', new_pei):  # noqa: E501
            raise ValueError("Invalid value for `new_pei`, must be a follow pattern or equal to `/^(imei-[0-9]{15}|imeisv-[0-9]{16}|mac((-[0-9a-fA-F]{2}){6})(-untrusted)?|eui((-[0-9a-fA-F]{2}){8})|.+)$/`")  # noqa: E501

        self._new_pei = new_pei
