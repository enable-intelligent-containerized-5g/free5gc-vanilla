# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.access_type import AccessType
from openapi_server.models.plmn_id import PlmnId
from openapi_server import util

from openapi_server.models.access_type import AccessType  # noqa: E501
from openapi_server.models.plmn_id import PlmnId  # noqa: E501

class RoamingStatusReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, roaming=None, new_serving_plmn=None, access_type=None):  # noqa: E501
        """RoamingStatusReport - a model defined in OpenAPI

        :param roaming: The roaming of this RoamingStatusReport.  # noqa: E501
        :type roaming: bool
        :param new_serving_plmn: The new_serving_plmn of this RoamingStatusReport.  # noqa: E501
        :type new_serving_plmn: PlmnId
        :param access_type: The access_type of this RoamingStatusReport.  # noqa: E501
        :type access_type: AccessType
        """
        self.openapi_types = {
            'roaming': bool,
            'new_serving_plmn': PlmnId,
            'access_type': AccessType
        }

        self.attribute_map = {
            'roaming': 'roaming',
            'new_serving_plmn': 'newServingPlmn',
            'access_type': 'accessType'
        }

        self.roaming = roaming
        self.new_serving_plmn = new_serving_plmn
        self.access_type = access_type

    @classmethod
    def from_dict(cls, dikt) -> 'RoamingStatusReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RoamingStatusReport of this RoamingStatusReport.  # noqa: E501
        :rtype: RoamingStatusReport
        """
        return util.deserialize_model(dikt, cls)

    @property
    def roaming(self):
        """Gets the roaming of this RoamingStatusReport.


        :return: The roaming of this RoamingStatusReport.
        :rtype: bool
        """
        return self._roaming

    @roaming.setter
    def roaming(self, roaming):
        """Sets the roaming of this RoamingStatusReport.


        :param roaming: The roaming of this RoamingStatusReport.
        :type roaming: bool
        """
        if roaming is None:
            raise ValueError("Invalid value for `roaming`, must not be `None`")  # noqa: E501

        self._roaming = roaming

    @property
    def new_serving_plmn(self):
        """Gets the new_serving_plmn of this RoamingStatusReport.


        :return: The new_serving_plmn of this RoamingStatusReport.
        :rtype: PlmnId
        """
        return self._new_serving_plmn

    @new_serving_plmn.setter
    def new_serving_plmn(self, new_serving_plmn):
        """Sets the new_serving_plmn of this RoamingStatusReport.


        :param new_serving_plmn: The new_serving_plmn of this RoamingStatusReport.
        :type new_serving_plmn: PlmnId
        """
        if new_serving_plmn is None:
            raise ValueError("Invalid value for `new_serving_plmn`, must not be `None`")  # noqa: E501

        self._new_serving_plmn = new_serving_plmn

    @property
    def access_type(self):
        """Gets the access_type of this RoamingStatusReport.


        :return: The access_type of this RoamingStatusReport.
        :rtype: AccessType
        """
        return self._access_type

    @access_type.setter
    def access_type(self, access_type):
        """Sets the access_type of this RoamingStatusReport.


        :param access_type: The access_type of this RoamingStatusReport.
        :type access_type: AccessType
        """

        self._access_type = access_type
