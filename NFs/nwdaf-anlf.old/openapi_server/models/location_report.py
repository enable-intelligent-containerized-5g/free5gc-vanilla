# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.user_location import UserLocation
from openapi_server import util

from openapi_server.models.user_location import UserLocation  # noqa: E501

class LocationReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, location=None):  # noqa: E501
        """LocationReport - a model defined in OpenAPI

        :param location: The location of this LocationReport.  # noqa: E501
        :type location: UserLocation
        """
        self.openapi_types = {
            'location': UserLocation
        }

        self.attribute_map = {
            'location': 'location'
        }

        self.location = location

    @classmethod
    def from_dict(cls, dikt) -> 'LocationReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The LocationReport of this LocationReport.  # noqa: E501
        :rtype: LocationReport
        """
        return util.deserialize_model(dikt, cls)

    @property
    def location(self):
        """Gets the location of this LocationReport.


        :return: The location of this LocationReport.
        :rtype: UserLocation
        """
        return self._location

    @location.setter
    def location(self, location):
        """Sets the location of this LocationReport.


        :param location: The location of this LocationReport.
        :type location: UserLocation
        """
        if location is None:
            raise ValueError("Invalid value for `location`, must not be `None`")  # noqa: E501

        self._location = location
