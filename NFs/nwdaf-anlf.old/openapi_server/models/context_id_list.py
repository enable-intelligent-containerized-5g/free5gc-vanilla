# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.analytics_context_identifier import AnalyticsContextIdentifier
from openapi_server import util

from openapi_server.models.analytics_context_identifier import AnalyticsContextIdentifier  # noqa: E501

class ContextIdList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, context_ids=None):  # noqa: E501
        """ContextIdList - a model defined in OpenAPI

        :param context_ids: The context_ids of this ContextIdList.  # noqa: E501
        :type context_ids: List[AnalyticsContextIdentifier]
        """
        self.openapi_types = {
            'context_ids': List[AnalyticsContextIdentifier]
        }

        self.attribute_map = {
            'context_ids': 'contextIds'
        }

        self.context_ids = context_ids

    @classmethod
    def from_dict(cls, dikt) -> 'ContextIdList':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ContextIdList of this ContextIdList.  # noqa: E501
        :rtype: ContextIdList
        """
        return util.deserialize_model(dikt, cls)

    @property
    def context_ids(self):
        """Gets the context_ids of this ContextIdList.


        :return: The context_ids of this ContextIdList.
        :rtype: List[AnalyticsContextIdentifier]
        """
        return self._context_ids

    @context_ids.setter
    def context_ids(self, context_ids):
        """Sets the context_ids of this ContextIdList.


        :param context_ids: The context_ids of this ContextIdList.
        :type context_ids: List[AnalyticsContextIdentifier]
        """
        if context_ids is None:
            raise ValueError("Invalid value for `context_ids`, must not be `None`")  # noqa: E501
        if context_ids is not None and len(context_ids) < 1:
            raise ValueError("Invalid value for `context_ids`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._context_ids = context_ids
