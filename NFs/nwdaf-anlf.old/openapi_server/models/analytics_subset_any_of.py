# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class AnalyticsSubsetAnyOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NUM_OF_UE_REG = "NUM_OF_UE_REG"
    NUM_OF_PDU_SESS_ESTBL = "NUM_OF_PDU_SESS_ESTBL"
    RES_USAGE = "RES_USAGE"
    NUM_OF_EXCEED_RES_USAGE_LOAD_LEVEL_THR = "NUM_OF_EXCEED_RES_USAGE_LOAD_LEVEL_THR"
    PERIOD_OF_EXCEED_RES_USAGE_LOAD_LEVEL_THR = "PERIOD_OF_EXCEED_RES_USAGE_LOAD_LEVEL_THR"
    EXCEED_LOAD_LEVEL_THR_IND = "EXCEED_LOAD_LEVEL_THR_IND"
    LIST_OF_TOP_APP_UL = "LIST_OF_TOP_APP_UL"
    LIST_OF_TOP_APP_DL = "LIST_OF_TOP_APP_DL"
    NF_STATUS = "NF_STATUS"
    NF_RESOURCE_USAGE = "NF_RESOURCE_USAGE"
    NF_LOAD = "NF_LOAD"
    NF_PEAK_LOAD = "NF_PEAK_LOAD"
    NF_LOAD_AVG_IN_AOI = "NF_LOAD_AVG_IN_AOI"
    DISPER_AMOUNT = "DISPER_AMOUNT"
    DISPER_CLASS = "DISPER_CLASS"
    RANKING = "RANKING"
    PERCENTILE_RANKING = "PERCENTILE_RANKING"
    RSSI = "RSSI"
    RTT = "RTT"
    TRAFFIC_INFO = "TRAFFIC_INFO"
    NUMBER_OF_UES = "NUMBER_OF_UES"
    APP_LIST_FOR_UE_COMM = "APP_LIST_FOR_UE_COMM"
    N4_SESS_INACT_TIMER_FOR_UE_COMM = "N4_SESS_INACT_TIMER_FOR_UE_COMM"
    AVG_TRAFFIC_RATE = "AVG_TRAFFIC_RATE"
    MAX_TRAFFIC_RATE = "MAX_TRAFFIC_RATE"
    AVG_PACKET_DELAY = "AVG_PACKET_DELAY"
    MAX_PACKET_DELAY = "MAX_PACKET_DELAY"
    AVG_PACKET_LOSS_RATE = "AVG_PACKET_LOSS_RATE"
    UE_LOCATION = "UE_LOCATION"
    LIST_OF_HIGH_EXP_UE = "LIST_OF_HIGH_EXP_UE"
    LIST_OF_MEDIUM_EXP_UE = "LIST_OF_MEDIUM_EXP_UE"
    LIST_OF_LOW_EXP_UE = "LIST_OF_LOW_EXP_UE"
    def __init__(self):  # noqa: E501
        """AnalyticsSubsetAnyOf - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'AnalyticsSubsetAnyOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AnalyticsSubset_anyOf of this AnalyticsSubsetAnyOf.  # noqa: E501
        :rtype: AnalyticsSubsetAnyOf
        """
        return util.deserialize_model(dikt, cls)
