# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class NefEventAnyOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    SVC_EXPERIENCE = "SVC_EXPERIENCE"
    UE_MOBILITY = "UE_MOBILITY"
    UE_COMM = "UE_COMM"
    EXCEPTIONS = "EXCEPTIONS"
    USER_DATA_CONGESTION = "USER_DATA_CONGESTION"
    PERF_DATA = "PERF_DATA"
    DISPERSION = "DISPERSION"
    COLLECTIVE_BEHAVIOUR = "COLLECTIVE_BEHAVIOUR"
    QOE_METRICS = "QOE_METRICS"
    CONSUMPTION = "CONSUMPTION"
    NET_ASSIST_INVOCATION = "NET_ASSIST_INVOCATION"
    CHARGING_POLICY_INVOCATION = "CHARGING_POLICY_INVOCATION"
    MS_ACCESS_ACTIVITY = "MS_ACCESS_ACTIVITY"
    def __init__(self):  # noqa: E501
        """NefEventAnyOf - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt) -> 'NefEventAnyOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NefEvent_anyOf of this NefEventAnyOf.  # noqa: E501
        :rtype: NefEventAnyOf
        """
        return util.deserialize_model(dikt, cls)
