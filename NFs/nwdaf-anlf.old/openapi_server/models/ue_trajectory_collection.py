# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.location_area5_g import LocationArea5G
from openapi_server import util

from openapi_server.models.location_area5_g import LocationArea5G  # noqa: E501

class UeTrajectoryCollection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ts=None, loc_area=None):  # noqa: E501
        """UeTrajectoryCollection - a model defined in OpenAPI

        :param ts: The ts of this UeTrajectoryCollection.  # noqa: E501
        :type ts: datetime
        :param loc_area: The loc_area of this UeTrajectoryCollection.  # noqa: E501
        :type loc_area: LocationArea5G
        """
        self.openapi_types = {
            'ts': datetime,
            'loc_area': LocationArea5G
        }

        self.attribute_map = {
            'ts': 'ts',
            'loc_area': 'locArea'
        }

        self.ts = ts
        self.loc_area = loc_area

    @classmethod
    def from_dict(cls, dikt) -> 'UeTrajectoryCollection':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UeTrajectoryCollection of this UeTrajectoryCollection.  # noqa: E501
        :rtype: UeTrajectoryCollection
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ts(self):
        """Gets the ts of this UeTrajectoryCollection.

        string with format 'date-time' as defined in OpenAPI.  # noqa: E501

        :return: The ts of this UeTrajectoryCollection.
        :rtype: datetime
        """
        return self._ts

    @ts.setter
    def ts(self, ts):
        """Sets the ts of this UeTrajectoryCollection.

        string with format 'date-time' as defined in OpenAPI.  # noqa: E501

        :param ts: The ts of this UeTrajectoryCollection.
        :type ts: datetime
        """
        if ts is None:
            raise ValueError("Invalid value for `ts`, must not be `None`")  # noqa: E501

        self._ts = ts

    @property
    def loc_area(self):
        """Gets the loc_area of this UeTrajectoryCollection.


        :return: The loc_area of this UeTrajectoryCollection.
        :rtype: LocationArea5G
        """
        return self._loc_area

    @loc_area.setter
    def loc_area(self, loc_area):
        """Sets the loc_area of this UeTrajectoryCollection.


        :param loc_area: The loc_area of this UeTrajectoryCollection.
        :type loc_area: LocationArea5G
        """
        if loc_area is None:
            raise ValueError("Invalid value for `loc_area`, must not be `None`")  # noqa: E501

        self._loc_area = loc_area
