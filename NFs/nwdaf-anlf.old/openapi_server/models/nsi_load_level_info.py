# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.network_area_info import NetworkAreaInfo
from openapi_server.models.number_average import NumberAverage
from openapi_server.models.resource_usage import ResourceUsage
from openapi_server.models.snssai import Snssai
from openapi_server.models.time_window import TimeWindow
from openapi_server import util

from openapi_server.models.network_area_info import NetworkAreaInfo  # noqa: E501
from openapi_server.models.number_average import NumberAverage  # noqa: E501
from openapi_server.models.resource_usage import ResourceUsage  # noqa: E501
from openapi_server.models.snssai import Snssai  # noqa: E501
from openapi_server.models.time_window import TimeWindow  # noqa: E501

class NsiLoadLevelInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, load_level_information=None, snssai=None, nsi_id=None, res_usage=None, num_of_exceed_load_level_thr=None, exceed_load_level_thr_ind=None, network_area=None, time_period=None, num_of_ues=None, num_of_pdu_sess=None, confidence=None):  # noqa: E501
        """NsiLoadLevelInfo - a model defined in OpenAPI

        :param load_level_information: The load_level_information of this NsiLoadLevelInfo.  # noqa: E501
        :type load_level_information: int
        :param snssai: The snssai of this NsiLoadLevelInfo.  # noqa: E501
        :type snssai: Snssai
        :param nsi_id: The nsi_id of this NsiLoadLevelInfo.  # noqa: E501
        :type nsi_id: str
        :param res_usage: The res_usage of this NsiLoadLevelInfo.  # noqa: E501
        :type res_usage: ResourceUsage
        :param num_of_exceed_load_level_thr: The num_of_exceed_load_level_thr of this NsiLoadLevelInfo.  # noqa: E501
        :type num_of_exceed_load_level_thr: int
        :param exceed_load_level_thr_ind: The exceed_load_level_thr_ind of this NsiLoadLevelInfo.  # noqa: E501
        :type exceed_load_level_thr_ind: bool
        :param network_area: The network_area of this NsiLoadLevelInfo.  # noqa: E501
        :type network_area: NetworkAreaInfo
        :param time_period: The time_period of this NsiLoadLevelInfo.  # noqa: E501
        :type time_period: TimeWindow
        :param num_of_ues: The num_of_ues of this NsiLoadLevelInfo.  # noqa: E501
        :type num_of_ues: NumberAverage
        :param num_of_pdu_sess: The num_of_pdu_sess of this NsiLoadLevelInfo.  # noqa: E501
        :type num_of_pdu_sess: NumberAverage
        :param confidence: The confidence of this NsiLoadLevelInfo.  # noqa: E501
        :type confidence: int
        """
        self.openapi_types = {
            'load_level_information': int,
            'snssai': Snssai,
            'nsi_id': str,
            'res_usage': ResourceUsage,
            'num_of_exceed_load_level_thr': int,
            'exceed_load_level_thr_ind': bool,
            'network_area': NetworkAreaInfo,
            'time_period': TimeWindow,
            'num_of_ues': NumberAverage,
            'num_of_pdu_sess': NumberAverage,
            'confidence': int
        }

        self.attribute_map = {
            'load_level_information': 'loadLevelInformation',
            'snssai': 'snssai',
            'nsi_id': 'nsiId',
            'res_usage': 'resUsage',
            'num_of_exceed_load_level_thr': 'numOfExceedLoadLevelThr',
            'exceed_load_level_thr_ind': 'exceedLoadLevelThrInd',
            'network_area': 'networkArea',
            'time_period': 'timePeriod',
            'num_of_ues': 'numOfUes',
            'num_of_pdu_sess': 'numOfPduSess',
            'confidence': 'confidence'
        }

        self.load_level_information = load_level_information
        self.snssai = snssai
        self.nsi_id = nsi_id
        self.res_usage = res_usage
        self.num_of_exceed_load_level_thr = num_of_exceed_load_level_thr
        self.exceed_load_level_thr_ind = exceed_load_level_thr_ind
        self.network_area = network_area
        self.time_period = time_period
        self.num_of_ues = num_of_ues
        self.num_of_pdu_sess = num_of_pdu_sess
        self.confidence = confidence

    @classmethod
    def from_dict(cls, dikt) -> 'NsiLoadLevelInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NsiLoadLevelInfo of this NsiLoadLevelInfo.  # noqa: E501
        :rtype: NsiLoadLevelInfo
        """
        return util.deserialize_model(dikt, cls)

    @property
    def load_level_information(self):
        """Gets the load_level_information of this NsiLoadLevelInfo.

        Load level information of the network slice and the optionally associated network slice  instance.   # noqa: E501

        :return: The load_level_information of this NsiLoadLevelInfo.
        :rtype: int
        """
        return self._load_level_information

    @load_level_information.setter
    def load_level_information(self, load_level_information):
        """Sets the load_level_information of this NsiLoadLevelInfo.

        Load level information of the network slice and the optionally associated network slice  instance.   # noqa: E501

        :param load_level_information: The load_level_information of this NsiLoadLevelInfo.
        :type load_level_information: int
        """
        if load_level_information is None:
            raise ValueError("Invalid value for `load_level_information`, must not be `None`")  # noqa: E501

        self._load_level_information = load_level_information

    @property
    def snssai(self):
        """Gets the snssai of this NsiLoadLevelInfo.


        :return: The snssai of this NsiLoadLevelInfo.
        :rtype: Snssai
        """
        return self._snssai

    @snssai.setter
    def snssai(self, snssai):
        """Sets the snssai of this NsiLoadLevelInfo.


        :param snssai: The snssai of this NsiLoadLevelInfo.
        :type snssai: Snssai
        """
        if snssai is None:
            raise ValueError("Invalid value for `snssai`, must not be `None`")  # noqa: E501

        self._snssai = snssai

    @property
    def nsi_id(self):
        """Gets the nsi_id of this NsiLoadLevelInfo.

        Contains the Identifier of the selected Network Slice instance  # noqa: E501

        :return: The nsi_id of this NsiLoadLevelInfo.
        :rtype: str
        """
        return self._nsi_id

    @nsi_id.setter
    def nsi_id(self, nsi_id):
        """Sets the nsi_id of this NsiLoadLevelInfo.

        Contains the Identifier of the selected Network Slice instance  # noqa: E501

        :param nsi_id: The nsi_id of this NsiLoadLevelInfo.
        :type nsi_id: str
        """

        self._nsi_id = nsi_id

    @property
    def res_usage(self):
        """Gets the res_usage of this NsiLoadLevelInfo.


        :return: The res_usage of this NsiLoadLevelInfo.
        :rtype: ResourceUsage
        """
        return self._res_usage

    @res_usage.setter
    def res_usage(self, res_usage):
        """Sets the res_usage of this NsiLoadLevelInfo.


        :param res_usage: The res_usage of this NsiLoadLevelInfo.
        :type res_usage: ResourceUsage
        """

        self._res_usage = res_usage

    @property
    def num_of_exceed_load_level_thr(self):
        """Gets the num_of_exceed_load_level_thr of this NsiLoadLevelInfo.

        Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.  # noqa: E501

        :return: The num_of_exceed_load_level_thr of this NsiLoadLevelInfo.
        :rtype: int
        """
        return self._num_of_exceed_load_level_thr

    @num_of_exceed_load_level_thr.setter
    def num_of_exceed_load_level_thr(self, num_of_exceed_load_level_thr):
        """Sets the num_of_exceed_load_level_thr of this NsiLoadLevelInfo.

        Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.  # noqa: E501

        :param num_of_exceed_load_level_thr: The num_of_exceed_load_level_thr of this NsiLoadLevelInfo.
        :type num_of_exceed_load_level_thr: int
        """
        if num_of_exceed_load_level_thr is not None and num_of_exceed_load_level_thr < 0:  # noqa: E501
            raise ValueError("Invalid value for `num_of_exceed_load_level_thr`, must be a value greater than or equal to `0`")  # noqa: E501

        self._num_of_exceed_load_level_thr = num_of_exceed_load_level_thr

    @property
    def exceed_load_level_thr_ind(self):
        """Gets the exceed_load_level_thr_ind of this NsiLoadLevelInfo.


        :return: The exceed_load_level_thr_ind of this NsiLoadLevelInfo.
        :rtype: bool
        """
        return self._exceed_load_level_thr_ind

    @exceed_load_level_thr_ind.setter
    def exceed_load_level_thr_ind(self, exceed_load_level_thr_ind):
        """Sets the exceed_load_level_thr_ind of this NsiLoadLevelInfo.


        :param exceed_load_level_thr_ind: The exceed_load_level_thr_ind of this NsiLoadLevelInfo.
        :type exceed_load_level_thr_ind: bool
        """

        self._exceed_load_level_thr_ind = exceed_load_level_thr_ind

    @property
    def network_area(self):
        """Gets the network_area of this NsiLoadLevelInfo.


        :return: The network_area of this NsiLoadLevelInfo.
        :rtype: NetworkAreaInfo
        """
        return self._network_area

    @network_area.setter
    def network_area(self, network_area):
        """Sets the network_area of this NsiLoadLevelInfo.


        :param network_area: The network_area of this NsiLoadLevelInfo.
        :type network_area: NetworkAreaInfo
        """

        self._network_area = network_area

    @property
    def time_period(self):
        """Gets the time_period of this NsiLoadLevelInfo.


        :return: The time_period of this NsiLoadLevelInfo.
        :rtype: TimeWindow
        """
        return self._time_period

    @time_period.setter
    def time_period(self, time_period):
        """Sets the time_period of this NsiLoadLevelInfo.


        :param time_period: The time_period of this NsiLoadLevelInfo.
        :type time_period: TimeWindow
        """

        self._time_period = time_period

    @property
    def num_of_ues(self):
        """Gets the num_of_ues of this NsiLoadLevelInfo.


        :return: The num_of_ues of this NsiLoadLevelInfo.
        :rtype: NumberAverage
        """
        return self._num_of_ues

    @num_of_ues.setter
    def num_of_ues(self, num_of_ues):
        """Sets the num_of_ues of this NsiLoadLevelInfo.


        :param num_of_ues: The num_of_ues of this NsiLoadLevelInfo.
        :type num_of_ues: NumberAverage
        """

        self._num_of_ues = num_of_ues

    @property
    def num_of_pdu_sess(self):
        """Gets the num_of_pdu_sess of this NsiLoadLevelInfo.


        :return: The num_of_pdu_sess of this NsiLoadLevelInfo.
        :rtype: NumberAverage
        """
        return self._num_of_pdu_sess

    @num_of_pdu_sess.setter
    def num_of_pdu_sess(self, num_of_pdu_sess):
        """Sets the num_of_pdu_sess of this NsiLoadLevelInfo.


        :param num_of_pdu_sess: The num_of_pdu_sess of this NsiLoadLevelInfo.
        :type num_of_pdu_sess: NumberAverage
        """

        self._num_of_pdu_sess = num_of_pdu_sess

    @property
    def confidence(self):
        """Gets the confidence of this NsiLoadLevelInfo.

        Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.  # noqa: E501

        :return: The confidence of this NsiLoadLevelInfo.
        :rtype: int
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this NsiLoadLevelInfo.

        Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.  # noqa: E501

        :param confidence: The confidence of this NsiLoadLevelInfo.
        :type confidence: int
        """
        if confidence is not None and confidence < 0:  # noqa: E501
            raise ValueError("Invalid value for `confidence`, must be a value greater than or equal to `0`")  # noqa: E501

        self._confidence = confidence
