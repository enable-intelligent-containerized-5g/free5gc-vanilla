# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class AdditionInfoAnalyticsInfoRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rv_wait_time=None):  # noqa: E501
        """AdditionInfoAnalyticsInfoRequest - a model defined in OpenAPI

        :param rv_wait_time: The rv_wait_time of this AdditionInfoAnalyticsInfoRequest.  # noqa: E501
        :type rv_wait_time: int
        """
        self.openapi_types = {
            'rv_wait_time': int
        }

        self.attribute_map = {
            'rv_wait_time': 'rvWaitTime'
        }

        self.rv_wait_time = rv_wait_time

    @classmethod
    def from_dict(cls, dikt) -> 'AdditionInfoAnalyticsInfoRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AdditionInfoAnalyticsInfoRequest of this AdditionInfoAnalyticsInfoRequest.  # noqa: E501
        :rtype: AdditionInfoAnalyticsInfoRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rv_wait_time(self):
        """Gets the rv_wait_time of this AdditionInfoAnalyticsInfoRequest.

        indicating a time in seconds.  # noqa: E501

        :return: The rv_wait_time of this AdditionInfoAnalyticsInfoRequest.
        :rtype: int
        """
        return self._rv_wait_time

    @rv_wait_time.setter
    def rv_wait_time(self, rv_wait_time):
        """Sets the rv_wait_time of this AdditionInfoAnalyticsInfoRequest.

        indicating a time in seconds.  # noqa: E501

        :param rv_wait_time: The rv_wait_time of this AdditionInfoAnalyticsInfoRequest.
        :type rv_wait_time: int
        """

        self._rv_wait_time = rv_wait_time
