# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.event_notification1 import EventNotification1
from openapi_server import util

from openapi_server.models.event_notification1 import EventNotification1  # noqa: E501

class NsmfEventExposureNotification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notif_id=None, event_notifs=None, ack_uri=None):  # noqa: E501
        """NsmfEventExposureNotification - a model defined in OpenAPI

        :param notif_id: The notif_id of this NsmfEventExposureNotification.  # noqa: E501
        :type notif_id: str
        :param event_notifs: The event_notifs of this NsmfEventExposureNotification.  # noqa: E501
        :type event_notifs: List[EventNotification1]
        :param ack_uri: The ack_uri of this NsmfEventExposureNotification.  # noqa: E501
        :type ack_uri: str
        """
        self.openapi_types = {
            'notif_id': str,
            'event_notifs': List[EventNotification1],
            'ack_uri': str
        }

        self.attribute_map = {
            'notif_id': 'notifId',
            'event_notifs': 'eventNotifs',
            'ack_uri': 'ackUri'
        }

        self.notif_id = notif_id
        self.event_notifs = event_notifs
        self.ack_uri = ack_uri

    @classmethod
    def from_dict(cls, dikt) -> 'NsmfEventExposureNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NsmfEventExposureNotification of this NsmfEventExposureNotification.  # noqa: E501
        :rtype: NsmfEventExposureNotification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notif_id(self):
        """Gets the notif_id of this NsmfEventExposureNotification.

        Notification correlation ID  # noqa: E501

        :return: The notif_id of this NsmfEventExposureNotification.
        :rtype: str
        """
        return self._notif_id

    @notif_id.setter
    def notif_id(self, notif_id):
        """Sets the notif_id of this NsmfEventExposureNotification.

        Notification correlation ID  # noqa: E501

        :param notif_id: The notif_id of this NsmfEventExposureNotification.
        :type notif_id: str
        """
        if notif_id is None:
            raise ValueError("Invalid value for `notif_id`, must not be `None`")  # noqa: E501

        self._notif_id = notif_id

    @property
    def event_notifs(self):
        """Gets the event_notifs of this NsmfEventExposureNotification.

        Notifications about Individual Events  # noqa: E501

        :return: The event_notifs of this NsmfEventExposureNotification.
        :rtype: List[EventNotification1]
        """
        return self._event_notifs

    @event_notifs.setter
    def event_notifs(self, event_notifs):
        """Sets the event_notifs of this NsmfEventExposureNotification.

        Notifications about Individual Events  # noqa: E501

        :param event_notifs: The event_notifs of this NsmfEventExposureNotification.
        :type event_notifs: List[EventNotification1]
        """
        if event_notifs is None:
            raise ValueError("Invalid value for `event_notifs`, must not be `None`")  # noqa: E501
        if event_notifs is not None and len(event_notifs) < 1:
            raise ValueError("Invalid value for `event_notifs`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._event_notifs = event_notifs

    @property
    def ack_uri(self):
        """Gets the ack_uri of this NsmfEventExposureNotification.

        String providing an URI formatted according to RFC 3986.  # noqa: E501

        :return: The ack_uri of this NsmfEventExposureNotification.
        :rtype: str
        """
        return self._ack_uri

    @ack_uri.setter
    def ack_uri(self, ack_uri):
        """Sets the ack_uri of this NsmfEventExposureNotification.

        String providing an URI formatted according to RFC 3986.  # noqa: E501

        :param ack_uri: The ack_uri of this NsmfEventExposureNotification.
        :type ack_uri: str
        """

        self._ack_uri = ack_uri
