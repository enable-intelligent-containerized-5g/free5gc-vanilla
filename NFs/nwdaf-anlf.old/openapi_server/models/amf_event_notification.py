# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.amf_event_report import AmfEventReport
from openapi_server.models.amf_event_subs_sync_info import AmfEventSubsSyncInfo
from openapi_server import util

from openapi_server.models.amf_event_report import AmfEventReport  # noqa: E501
from openapi_server.models.amf_event_subs_sync_info import AmfEventSubsSyncInfo  # noqa: E501

class AmfEventNotification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, notify_correlation_id=None, subs_change_notify_correlation_id=None, report_list=None, event_subs_sync_info=None):  # noqa: E501
        """AmfEventNotification - a model defined in OpenAPI

        :param notify_correlation_id: The notify_correlation_id of this AmfEventNotification.  # noqa: E501
        :type notify_correlation_id: str
        :param subs_change_notify_correlation_id: The subs_change_notify_correlation_id of this AmfEventNotification.  # noqa: E501
        :type subs_change_notify_correlation_id: str
        :param report_list: The report_list of this AmfEventNotification.  # noqa: E501
        :type report_list: List[AmfEventReport]
        :param event_subs_sync_info: The event_subs_sync_info of this AmfEventNotification.  # noqa: E501
        :type event_subs_sync_info: AmfEventSubsSyncInfo
        """
        self.openapi_types = {
            'notify_correlation_id': str,
            'subs_change_notify_correlation_id': str,
            'report_list': List[AmfEventReport],
            'event_subs_sync_info': AmfEventSubsSyncInfo
        }

        self.attribute_map = {
            'notify_correlation_id': 'notifyCorrelationId',
            'subs_change_notify_correlation_id': 'subsChangeNotifyCorrelationId',
            'report_list': 'reportList',
            'event_subs_sync_info': 'eventSubsSyncInfo'
        }

        self.notify_correlation_id = notify_correlation_id
        self.subs_change_notify_correlation_id = subs_change_notify_correlation_id
        self.report_list = report_list
        self.event_subs_sync_info = event_subs_sync_info

    @classmethod
    def from_dict(cls, dikt) -> 'AmfEventNotification':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AmfEventNotification of this AmfEventNotification.  # noqa: E501
        :rtype: AmfEventNotification
        """
        return util.deserialize_model(dikt, cls)

    @property
    def notify_correlation_id(self):
        """Gets the notify_correlation_id of this AmfEventNotification.


        :return: The notify_correlation_id of this AmfEventNotification.
        :rtype: str
        """
        return self._notify_correlation_id

    @notify_correlation_id.setter
    def notify_correlation_id(self, notify_correlation_id):
        """Sets the notify_correlation_id of this AmfEventNotification.


        :param notify_correlation_id: The notify_correlation_id of this AmfEventNotification.
        :type notify_correlation_id: str
        """

        self._notify_correlation_id = notify_correlation_id

    @property
    def subs_change_notify_correlation_id(self):
        """Gets the subs_change_notify_correlation_id of this AmfEventNotification.


        :return: The subs_change_notify_correlation_id of this AmfEventNotification.
        :rtype: str
        """
        return self._subs_change_notify_correlation_id

    @subs_change_notify_correlation_id.setter
    def subs_change_notify_correlation_id(self, subs_change_notify_correlation_id):
        """Sets the subs_change_notify_correlation_id of this AmfEventNotification.


        :param subs_change_notify_correlation_id: The subs_change_notify_correlation_id of this AmfEventNotification.
        :type subs_change_notify_correlation_id: str
        """

        self._subs_change_notify_correlation_id = subs_change_notify_correlation_id

    @property
    def report_list(self):
        """Gets the report_list of this AmfEventNotification.


        :return: The report_list of this AmfEventNotification.
        :rtype: List[AmfEventReport]
        """
        return self._report_list

    @report_list.setter
    def report_list(self, report_list):
        """Sets the report_list of this AmfEventNotification.


        :param report_list: The report_list of this AmfEventNotification.
        :type report_list: List[AmfEventReport]
        """
        if report_list is not None and len(report_list) < 1:
            raise ValueError("Invalid value for `report_list`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._report_list = report_list

    @property
    def event_subs_sync_info(self):
        """Gets the event_subs_sync_info of this AmfEventNotification.


        :return: The event_subs_sync_info of this AmfEventNotification.
        :rtype: AmfEventSubsSyncInfo
        """
        return self._event_subs_sync_info

    @event_subs_sync_info.setter
    def event_subs_sync_info(self, event_subs_sync_info):
        """Sets the event_subs_sync_info of this AmfEventNotification.


        :param event_subs_sync_info: The event_subs_sync_info of this AmfEventNotification.
        :type event_subs_sync_info: AmfEventSubsSyncInfo
        """

        self._event_subs_sync_info = event_subs_sync_info
