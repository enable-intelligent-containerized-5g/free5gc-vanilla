# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.ecgi import Ecgi
from openapi_server.models.n3ga_location import N3gaLocation
from openapi_server.models.ncgi import Ncgi
from openapi_server.models.tai import Tai
from openapi_server import util

from openapi_server.models.ecgi import Ecgi  # noqa: E501
from openapi_server.models.n3ga_location import N3gaLocation  # noqa: E501
from openapi_server.models.ncgi import Ncgi  # noqa: E501
from openapi_server.models.tai import Tai  # noqa: E501

class UeLocationTrendsReportItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, tai=None, ncgi=None, ecgi=None, n3ga_location=None, spacing=None, duration=None, timestamp=None):  # noqa: E501
        """UeLocationTrendsReportItem - a model defined in OpenAPI

        :param tai: The tai of this UeLocationTrendsReportItem.  # noqa: E501
        :type tai: Tai
        :param ncgi: The ncgi of this UeLocationTrendsReportItem.  # noqa: E501
        :type ncgi: Ncgi
        :param ecgi: The ecgi of this UeLocationTrendsReportItem.  # noqa: E501
        :type ecgi: Ecgi
        :param n3ga_location: The n3ga_location of this UeLocationTrendsReportItem.  # noqa: E501
        :type n3ga_location: N3gaLocation
        :param spacing: The spacing of this UeLocationTrendsReportItem.  # noqa: E501
        :type spacing: int
        :param duration: The duration of this UeLocationTrendsReportItem.  # noqa: E501
        :type duration: int
        :param timestamp: The timestamp of this UeLocationTrendsReportItem.  # noqa: E501
        :type timestamp: datetime
        """
        self.openapi_types = {
            'tai': Tai,
            'ncgi': Ncgi,
            'ecgi': Ecgi,
            'n3ga_location': N3gaLocation,
            'spacing': int,
            'duration': int,
            'timestamp': datetime
        }

        self.attribute_map = {
            'tai': 'tai',
            'ncgi': 'ncgi',
            'ecgi': 'ecgi',
            'n3ga_location': 'n3gaLocation',
            'spacing': 'spacing',
            'duration': 'duration',
            'timestamp': 'timestamp'
        }

        self.tai = tai
        self.ncgi = ncgi
        self.ecgi = ecgi
        self.n3ga_location = n3ga_location
        self.spacing = spacing
        self.duration = duration
        self.timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt) -> 'UeLocationTrendsReportItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UeLocationTrendsReportItem of this UeLocationTrendsReportItem.  # noqa: E501
        :rtype: UeLocationTrendsReportItem
        """
        return util.deserialize_model(dikt, cls)

    @property
    def tai(self):
        """Gets the tai of this UeLocationTrendsReportItem.


        :return: The tai of this UeLocationTrendsReportItem.
        :rtype: Tai
        """
        return self._tai

    @tai.setter
    def tai(self, tai):
        """Sets the tai of this UeLocationTrendsReportItem.


        :param tai: The tai of this UeLocationTrendsReportItem.
        :type tai: Tai
        """

        self._tai = tai

    @property
    def ncgi(self):
        """Gets the ncgi of this UeLocationTrendsReportItem.


        :return: The ncgi of this UeLocationTrendsReportItem.
        :rtype: Ncgi
        """
        return self._ncgi

    @ncgi.setter
    def ncgi(self, ncgi):
        """Sets the ncgi of this UeLocationTrendsReportItem.


        :param ncgi: The ncgi of this UeLocationTrendsReportItem.
        :type ncgi: Ncgi
        """

        self._ncgi = ncgi

    @property
    def ecgi(self):
        """Gets the ecgi of this UeLocationTrendsReportItem.


        :return: The ecgi of this UeLocationTrendsReportItem.
        :rtype: Ecgi
        """
        return self._ecgi

    @ecgi.setter
    def ecgi(self, ecgi):
        """Sets the ecgi of this UeLocationTrendsReportItem.


        :param ecgi: The ecgi of this UeLocationTrendsReportItem.
        :type ecgi: Ecgi
        """

        self._ecgi = ecgi

    @property
    def n3ga_location(self):
        """Gets the n3ga_location of this UeLocationTrendsReportItem.


        :return: The n3ga_location of this UeLocationTrendsReportItem.
        :rtype: N3gaLocation
        """
        return self._n3ga_location

    @n3ga_location.setter
    def n3ga_location(self, n3ga_location):
        """Sets the n3ga_location of this UeLocationTrendsReportItem.


        :param n3ga_location: The n3ga_location of this UeLocationTrendsReportItem.
        :type n3ga_location: N3gaLocation
        """

        self._n3ga_location = n3ga_location

    @property
    def spacing(self):
        """Gets the spacing of this UeLocationTrendsReportItem.

        indicating a time in seconds.  # noqa: E501

        :return: The spacing of this UeLocationTrendsReportItem.
        :rtype: int
        """
        return self._spacing

    @spacing.setter
    def spacing(self, spacing):
        """Sets the spacing of this UeLocationTrendsReportItem.

        indicating a time in seconds.  # noqa: E501

        :param spacing: The spacing of this UeLocationTrendsReportItem.
        :type spacing: int
        """
        if spacing is None:
            raise ValueError("Invalid value for `spacing`, must not be `None`")  # noqa: E501

        self._spacing = spacing

    @property
    def duration(self):
        """Gets the duration of this UeLocationTrendsReportItem.

        indicating a time in seconds.  # noqa: E501

        :return: The duration of this UeLocationTrendsReportItem.
        :rtype: int
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this UeLocationTrendsReportItem.

        indicating a time in seconds.  # noqa: E501

        :param duration: The duration of this UeLocationTrendsReportItem.
        :type duration: int
        """
        if duration is None:
            raise ValueError("Invalid value for `duration`, must not be `None`")  # noqa: E501

        self._duration = duration

    @property
    def timestamp(self):
        """Gets the timestamp of this UeLocationTrendsReportItem.

        string with format 'date-time' as defined in OpenAPI.  # noqa: E501

        :return: The timestamp of this UeLocationTrendsReportItem.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this UeLocationTrendsReportItem.

        string with format 'date-time' as defined in OpenAPI.  # noqa: E501

        :param timestamp: The timestamp of this UeLocationTrendsReportItem.
        :type timestamp: datetime
        """
        if timestamp is None:
            raise ValueError("Invalid value for `timestamp`, must not be `None`")  # noqa: E501

        self._timestamp = timestamp
