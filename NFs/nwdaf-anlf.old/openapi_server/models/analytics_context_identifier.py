# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server.models.nwdaf_event import NwdafEvent
from openapi_server.models.ue_analytics_context_descriptor import UeAnalyticsContextDescriptor
from openapi_server import util

from openapi_server.models.nwdaf_event import NwdafEvent  # noqa: E501
from openapi_server.models.ue_analytics_context_descriptor import UeAnalyticsContextDescriptor  # noqa: E501

class AnalyticsContextIdentifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, subscription_id=None, nf_ana_ctxts=None, ue_ana_ctxts=None):  # noqa: E501
        """AnalyticsContextIdentifier - a model defined in OpenAPI

        :param subscription_id: The subscription_id of this AnalyticsContextIdentifier.  # noqa: E501
        :type subscription_id: str
        :param nf_ana_ctxts: The nf_ana_ctxts of this AnalyticsContextIdentifier.  # noqa: E501
        :type nf_ana_ctxts: List[NwdafEvent]
        :param ue_ana_ctxts: The ue_ana_ctxts of this AnalyticsContextIdentifier.  # noqa: E501
        :type ue_ana_ctxts: List[UeAnalyticsContextDescriptor]
        """
        self.openapi_types = {
            'subscription_id': str,
            'nf_ana_ctxts': List[NwdafEvent],
            'ue_ana_ctxts': List[UeAnalyticsContextDescriptor]
        }

        self.attribute_map = {
            'subscription_id': 'subscriptionId',
            'nf_ana_ctxts': 'nfAnaCtxts',
            'ue_ana_ctxts': 'ueAnaCtxts'
        }

        self.subscription_id = subscription_id
        self.nf_ana_ctxts = nf_ana_ctxts
        self.ue_ana_ctxts = ue_ana_ctxts

    @classmethod
    def from_dict(cls, dikt) -> 'AnalyticsContextIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AnalyticsContextIdentifier of this AnalyticsContextIdentifier.  # noqa: E501
        :rtype: AnalyticsContextIdentifier
        """
        return util.deserialize_model(dikt, cls)

    @property
    def subscription_id(self):
        """Gets the subscription_id of this AnalyticsContextIdentifier.

        The identifier of a subscription.  # noqa: E501

        :return: The subscription_id of this AnalyticsContextIdentifier.
        :rtype: str
        """
        return self._subscription_id

    @subscription_id.setter
    def subscription_id(self, subscription_id):
        """Sets the subscription_id of this AnalyticsContextIdentifier.

        The identifier of a subscription.  # noqa: E501

        :param subscription_id: The subscription_id of this AnalyticsContextIdentifier.
        :type subscription_id: str
        """

        self._subscription_id = subscription_id

    @property
    def nf_ana_ctxts(self):
        """Gets the nf_ana_ctxts of this AnalyticsContextIdentifier.

        List of analytics types for which NF related analytics contexts can be retrieved.   # noqa: E501

        :return: The nf_ana_ctxts of this AnalyticsContextIdentifier.
        :rtype: List[NwdafEvent]
        """
        return self._nf_ana_ctxts

    @nf_ana_ctxts.setter
    def nf_ana_ctxts(self, nf_ana_ctxts):
        """Sets the nf_ana_ctxts of this AnalyticsContextIdentifier.

        List of analytics types for which NF related analytics contexts can be retrieved.   # noqa: E501

        :param nf_ana_ctxts: The nf_ana_ctxts of this AnalyticsContextIdentifier.
        :type nf_ana_ctxts: List[NwdafEvent]
        """
        if nf_ana_ctxts is not None and len(nf_ana_ctxts) < 1:
            raise ValueError("Invalid value for `nf_ana_ctxts`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._nf_ana_ctxts = nf_ana_ctxts

    @property
    def ue_ana_ctxts(self):
        """Gets the ue_ana_ctxts of this AnalyticsContextIdentifier.

        List of objects that indicate for which SUPI and analytics types combinations analytics  context can be retrieved.   # noqa: E501

        :return: The ue_ana_ctxts of this AnalyticsContextIdentifier.
        :rtype: List[UeAnalyticsContextDescriptor]
        """
        return self._ue_ana_ctxts

    @ue_ana_ctxts.setter
    def ue_ana_ctxts(self, ue_ana_ctxts):
        """Sets the ue_ana_ctxts of this AnalyticsContextIdentifier.

        List of objects that indicate for which SUPI and analytics types combinations analytics  context can be retrieved.   # noqa: E501

        :param ue_ana_ctxts: The ue_ana_ctxts of this AnalyticsContextIdentifier.
        :type ue_ana_ctxts: List[UeAnalyticsContextDescriptor]
        """
        if ue_ana_ctxts is not None and len(ue_ana_ctxts) < 1:
            raise ValueError("Invalid value for `ue_ana_ctxts`, number of items must be greater than or equal to `1`")  # noqa: E501

        self._ue_ana_ctxts = ue_ana_ctxts
